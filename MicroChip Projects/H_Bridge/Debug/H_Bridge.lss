
H_Bridge.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000302  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000356  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000356  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000388  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000af1  00000000  00000000  0000044c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000074c  00000000  00000000  00000f3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000509  00000000  00000000  00001689  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  00001b94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000415  00000000  00000000  00001c60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000040e  00000000  00000000  00002075  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00002483  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:


int main(void)
{
    /* Replace with your application code */
	H_Bridge_Init();
  6c:	0e 94 2f 01 	call	0x25e	; 0x25e <H_Bridge_Init>
    while (1) 
    {
		H_Bridge_SetPinValue(H_ENA, High);
  70:	61 e0       	ldi	r22, 0x01	; 1
  72:	84 e0       	ldi	r24, 0x04	; 4
  74:	0e 94 4e 01 	call	0x29c	; 0x29c <H_Bridge_SetPinValue>
		H_Bridge_SetENA(Farward);
  78:	81 e0       	ldi	r24, 0x01	; 1
  7a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <H_Bridge_SetENA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7e:	2f e7       	ldi	r18, 0x7F	; 127
  80:	84 e8       	ldi	r24, 0x84	; 132
  82:	9e e1       	ldi	r25, 0x1E	; 30
  84:	21 50       	subi	r18, 0x01	; 1
  86:	80 40       	sbci	r24, 0x00	; 0
  88:	90 40       	sbci	r25, 0x00	; 0
  8a:	e1 f7       	brne	.-8      	; 0x84 <main+0x18>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x22>
  8e:	00 00       	nop
		_delay_ms(10000);
		H_Bridge_SetENA(Backward);
  90:	82 e0       	ldi	r24, 0x02	; 2
  92:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <H_Bridge_SetENA>
  96:	2f e7       	ldi	r18, 0x7F	; 127
  98:	84 e8       	ldi	r24, 0x84	; 132
  9a:	9e e1       	ldi	r25, 0x1E	; 30
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	90 40       	sbci	r25, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <main+0x30>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x3a>
  a6:	00 00       	nop
  a8:	e3 cf       	rjmp	.-58     	; 0x70 <main+0x4>

000000aa <DIO_voidSetPinDirection>:
    case PortB: Loc_uint8Result = Get( PinB_Reg,  Pin); break;
    case PortC: Loc_uint8Result = Get( PinC_Reg,  Pin); break;
    case PortD: Loc_uint8Result = Get( PinD_Reg,  Pin); break;
    }
    return Loc_uint8Result;
}
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	01 f1       	breq	.+64     	; 0xee <DIO_voidSetPinDirection+0x44>
  ae:	30 f0       	brcs	.+12     	; 0xbc <DIO_voidSetPinDirection+0x12>
  b0:	82 30       	cpi	r24, 0x02	; 2
  b2:	b1 f1       	breq	.+108    	; 0x120 <DIO_voidSetPinDirection+0x76>
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	09 f4       	brne	.+2      	; 0xba <DIO_voidSetPinDirection+0x10>
  b8:	4c c0       	rjmp	.+152    	; 0x152 <DIO_voidSetPinDirection+0xa8>
  ba:	08 95       	ret
  bc:	41 30       	cpi	r20, 0x01	; 1
  be:	59 f4       	brne	.+22     	; 0xd6 <DIO_voidSetPinDirection+0x2c>
  c0:	2a b3       	in	r18, 0x1a	; 26
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	02 c0       	rjmp	.+4      	; 0xcc <DIO_voidSetPinDirection+0x22>
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	6a 95       	dec	r22
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <DIO_voidSetPinDirection+0x1e>
  d0:	82 2b       	or	r24, r18
  d2:	8a bb       	out	0x1a, r24	; 26
  d4:	08 95       	ret
  d6:	2a b3       	in	r18, 0x1a	; 26
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DIO_voidSetPinDirection+0x38>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	6a 95       	dec	r22
  e4:	e2 f7       	brpl	.-8      	; 0xde <DIO_voidSetPinDirection+0x34>
  e6:	80 95       	com	r24
  e8:	82 23       	and	r24, r18
  ea:	8a bb       	out	0x1a, r24	; 26
  ec:	08 95       	ret
  ee:	41 30       	cpi	r20, 0x01	; 1
  f0:	59 f4       	brne	.+22     	; 0x108 <DIO_voidSetPinDirection+0x5e>
  f2:	27 b3       	in	r18, 0x17	; 23
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_voidSetPinDirection+0x54>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_voidSetPinDirection+0x50>
 102:	82 2b       	or	r24, r18
 104:	87 bb       	out	0x17, r24	; 23
 106:	08 95       	ret
 108:	27 b3       	in	r18, 0x17	; 23
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_voidSetPinDirection+0x6a>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	6a 95       	dec	r22
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_voidSetPinDirection+0x66>
 118:	80 95       	com	r24
 11a:	82 23       	and	r24, r18
 11c:	87 bb       	out	0x17, r24	; 23
 11e:	08 95       	ret
 120:	41 30       	cpi	r20, 0x01	; 1
 122:	59 f4       	brne	.+22     	; 0x13a <DIO_voidSetPinDirection+0x90>
 124:	24 b3       	in	r18, 0x14	; 20
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_voidSetPinDirection+0x86>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_voidSetPinDirection+0x82>
 134:	82 2b       	or	r24, r18
 136:	84 bb       	out	0x14, r24	; 20
 138:	08 95       	ret
 13a:	24 b3       	in	r18, 0x14	; 20
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_voidSetPinDirection+0x9c>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	6a 95       	dec	r22
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_voidSetPinDirection+0x98>
 14a:	80 95       	com	r24
 14c:	82 23       	and	r24, r18
 14e:	84 bb       	out	0x14, r24	; 20
 150:	08 95       	ret
 152:	41 30       	cpi	r20, 0x01	; 1
 154:	59 f4       	brne	.+22     	; 0x16c <DIO_voidSetPinDirection+0xc2>
 156:	21 b3       	in	r18, 0x11	; 17
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	02 c0       	rjmp	.+4      	; 0x162 <DIO_voidSetPinDirection+0xb8>
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	6a 95       	dec	r22
 164:	e2 f7       	brpl	.-8      	; 0x15e <DIO_voidSetPinDirection+0xb4>
 166:	82 2b       	or	r24, r18
 168:	81 bb       	out	0x11, r24	; 17
 16a:	08 95       	ret
 16c:	21 b3       	in	r18, 0x11	; 17
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_voidSetPinDirection+0xce>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_voidSetPinDirection+0xca>
 17c:	80 95       	com	r24
 17e:	82 23       	and	r24, r18
 180:	81 bb       	out	0x11, r24	; 17
 182:	08 95       	ret

00000184 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Port, uint8 Pin, uint8 Value)
{
    switch (Port)
 184:	81 30       	cpi	r24, 0x01	; 1
 186:	01 f1       	breq	.+64     	; 0x1c8 <DIO_voidSetPinValue+0x44>
 188:	30 f0       	brcs	.+12     	; 0x196 <DIO_voidSetPinValue+0x12>
 18a:	82 30       	cpi	r24, 0x02	; 2
 18c:	b1 f1       	breq	.+108    	; 0x1fa <DIO_voidSetPinValue+0x76>
 18e:	83 30       	cpi	r24, 0x03	; 3
 190:	09 f4       	brne	.+2      	; 0x194 <DIO_voidSetPinValue+0x10>
 192:	4c c0       	rjmp	.+152    	; 0x22c <DIO_voidSetPinValue+0xa8>
 194:	08 95       	ret
    {
    case PortA: if(Value == High) Set( PortA_Reg,  Pin); else Clr( PortA_Reg, Pin); break;
 196:	41 30       	cpi	r20, 0x01	; 1
 198:	59 f4       	brne	.+22     	; 0x1b0 <DIO_voidSetPinValue+0x2c>
 19a:	2b b3       	in	r18, 0x1b	; 27
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <DIO_voidSetPinValue+0x22>
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	6a 95       	dec	r22
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <DIO_voidSetPinValue+0x1e>
 1aa:	82 2b       	or	r24, r18
 1ac:	8b bb       	out	0x1b, r24	; 27
 1ae:	08 95       	ret
 1b0:	2b b3       	in	r18, 0x1b	; 27
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_voidSetPinValue+0x38>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_voidSetPinValue+0x34>
 1c0:	80 95       	com	r24
 1c2:	82 23       	and	r24, r18
 1c4:	8b bb       	out	0x1b, r24	; 27
 1c6:	08 95       	ret
    case PortB: if(Value == High) Set( PortB_Reg,  Pin); else Clr( PortB_Reg, Pin); break;
 1c8:	41 30       	cpi	r20, 0x01	; 1
 1ca:	59 f4       	brne	.+22     	; 0x1e2 <DIO_voidSetPinValue+0x5e>
 1cc:	28 b3       	in	r18, 0x18	; 24
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <DIO_voidSetPinValue+0x54>
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	6a 95       	dec	r22
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <DIO_voidSetPinValue+0x50>
 1dc:	82 2b       	or	r24, r18
 1de:	88 bb       	out	0x18, r24	; 24
 1e0:	08 95       	ret
 1e2:	28 b3       	in	r18, 0x18	; 24
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_voidSetPinValue+0x6a>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_voidSetPinValue+0x66>
 1f2:	80 95       	com	r24
 1f4:	82 23       	and	r24, r18
 1f6:	88 bb       	out	0x18, r24	; 24
 1f8:	08 95       	ret
    case PortC: if(Value == High) Set( PortC_Reg,  Pin); else Clr( PortC_Reg, Pin); break;
 1fa:	41 30       	cpi	r20, 0x01	; 1
 1fc:	59 f4       	brne	.+22     	; 0x214 <DIO_voidSetPinValue+0x90>
 1fe:	25 b3       	in	r18, 0x15	; 21
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_voidSetPinValue+0x86>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_voidSetPinValue+0x82>
 20e:	82 2b       	or	r24, r18
 210:	85 bb       	out	0x15, r24	; 21
 212:	08 95       	ret
 214:	25 b3       	in	r18, 0x15	; 21
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_voidSetPinValue+0x9c>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_voidSetPinValue+0x98>
 224:	80 95       	com	r24
 226:	82 23       	and	r24, r18
 228:	85 bb       	out	0x15, r24	; 21
 22a:	08 95       	ret
    case PortD: if(Value == High) Set( PortD_Reg,  Pin); else Clr( PortD_Reg, Pin); break;
 22c:	41 30       	cpi	r20, 0x01	; 1
 22e:	59 f4       	brne	.+22     	; 0x246 <DIO_voidSetPinValue+0xc2>
 230:	22 b3       	in	r18, 0x12	; 18
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_voidSetPinValue+0xb8>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_voidSetPinValue+0xb4>
 240:	82 2b       	or	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret
 246:	22 b3       	in	r18, 0x12	; 18
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 c0       	rjmp	.+4      	; 0x252 <DIO_voidSetPinValue+0xce>
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	6a 95       	dec	r22
 254:	e2 f7       	brpl	.-8      	; 0x24e <DIO_voidSetPinValue+0xca>
 256:	80 95       	com	r24
 258:	82 23       	and	r24, r18
 25a:	82 bb       	out	0x12, r24	; 18
 25c:	08 95       	ret

0000025e <H_Bridge_Init>:
#include "../Include/H_Bridge.h"
#include "../Include/DIO.h"

void H_Bridge_Init()
{
    DIO_voidSetPinDirection(H_PortC, H_A1, Output);
 25e:	41 e0       	ldi	r20, 0x01	; 1
 260:	63 e0       	ldi	r22, 0x03	; 3
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(H_PortC, H_A2, Output);
 268:	41 e0       	ldi	r20, 0x01	; 1
 26a:	64 e0       	ldi	r22, 0x04	; 4
 26c:	82 e0       	ldi	r24, 0x02	; 2
 26e:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(H_PortC, H_A3, Output);
 272:	41 e0       	ldi	r20, 0x01	; 1
 274:	65 e0       	ldi	r22, 0x05	; 5
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(H_PortC, H_A4, Output);
 27c:	41 e0       	ldi	r20, 0x01	; 1
 27e:	66 e0       	ldi	r22, 0x06	; 6
 280:	82 e0       	ldi	r24, 0x02	; 2
 282:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(H_PortD, H_ENA, Output);
 286:	41 e0       	ldi	r20, 0x01	; 1
 288:	64 e0       	ldi	r22, 0x04	; 4
 28a:	83 e0       	ldi	r24, 0x03	; 3
 28c:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(H_PortD, H_ENB, Output);
 290:	41 e0       	ldi	r20, 0x01	; 1
 292:	65 e0       	ldi	r22, 0x05	; 5
 294:	83 e0       	ldi	r24, 0x03	; 3
 296:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_voidSetPinDirection>
 29a:	08 95       	ret

0000029c <H_Bridge_SetPinValue>:
}

void H_Bridge_SetPinValue(uint8 H_EN, uint8 Value)
{
    if (Value == High)
 29c:	61 30       	cpi	r22, 0x01	; 1
 29e:	31 f4       	brne	.+12     	; 0x2ac <H_Bridge_SetPinValue+0x10>
    {
        DIO_voidSetPinValue(H_PortD, H_EN, High);
 2a0:	41 e0       	ldi	r20, 0x01	; 1
 2a2:	68 2f       	mov	r22, r24
 2a4:	83 e0       	ldi	r24, 0x03	; 3
 2a6:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_voidSetPinValue>
 2aa:	08 95       	ret
    }
    else
    {
        DIO_voidSetPinValue(H_PortD, H_EN, Low);
 2ac:	40 e0       	ldi	r20, 0x00	; 0
 2ae:	68 2f       	mov	r22, r24
 2b0:	83 e0       	ldi	r24, 0x03	; 3
 2b2:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_voidSetPinValue>
 2b6:	08 95       	ret

000002b8 <H_Bridge_SetENA>:
    }
}

void H_Bridge_SetENA(uint8 Direction)
{
 2b8:	cf 93       	push	r28
 2ba:	c8 2f       	mov	r28, r24
    DIO_voidSetPinValue(H_PortD, H_ENA, High);
 2bc:	41 e0       	ldi	r20, 0x01	; 1
 2be:	64 e0       	ldi	r22, 0x04	; 4
 2c0:	83 e0       	ldi	r24, 0x03	; 3
 2c2:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_voidSetPinValue>
    switch (Direction)
 2c6:	c1 30       	cpi	r28, 0x01	; 1
 2c8:	19 f0       	breq	.+6      	; 0x2d0 <H_Bridge_SetENA+0x18>
 2ca:	c2 30       	cpi	r28, 0x02	; 2
 2cc:	61 f0       	breq	.+24     	; 0x2e6 <H_Bridge_SetENA+0x2e>
 2ce:	15 c0       	rjmp	.+42     	; 0x2fa <H_Bridge_SetENA+0x42>
    {
        case (1): DIO_voidSetPinValue(H_PortC, H_A1, High); DIO_voidSetPinValue(H_PortC, H_A2, Low); break;
 2d0:	41 e0       	ldi	r20, 0x01	; 1
 2d2:	63 e0       	ldi	r22, 0x03	; 3
 2d4:	82 e0       	ldi	r24, 0x02	; 2
 2d6:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_voidSetPinValue>
 2da:	40 e0       	ldi	r20, 0x00	; 0
 2dc:	64 e0       	ldi	r22, 0x04	; 4
 2de:	82 e0       	ldi	r24, 0x02	; 2
 2e0:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_voidSetPinValue>
 2e4:	0a c0       	rjmp	.+20     	; 0x2fa <H_Bridge_SetENA+0x42>
        case (2): DIO_voidSetPinValue(H_PortC, H_A2, High); DIO_voidSetPinValue(H_PortC, H_A1, Low); break;
 2e6:	41 e0       	ldi	r20, 0x01	; 1
 2e8:	64 e0       	ldi	r22, 0x04	; 4
 2ea:	82 e0       	ldi	r24, 0x02	; 2
 2ec:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_voidSetPinValue>
 2f0:	40 e0       	ldi	r20, 0x00	; 0
 2f2:	63 e0       	ldi	r22, 0x03	; 3
 2f4:	82 e0       	ldi	r24, 0x02	; 2
 2f6:	0e 94 c2 00 	call	0x184	; 0x184 <DIO_voidSetPinValue>
    }
    
}
 2fa:	cf 91       	pop	r28
 2fc:	08 95       	ret

000002fe <_exit>:
 2fe:	f8 94       	cli

00000300 <__stop_program>:
 300:	ff cf       	rjmp	.-2      	; 0x300 <__stop_program>
