
LED SIREN.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003d6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000042a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000042a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000045c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c8a  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000071e  00000000  00000000  0000119a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000051e  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00001dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d8  00000000  00000000  00001e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000058e  00000000  00000000  00002264  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000027f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 e9 01 	jmp	0x3d2	; 0x3d2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
int main(void)
{
    /* Replace with your application code */
    while (1) 
    {
		LED_OFF(PortB, Pin0);
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	81 e0       	ldi	r24, 0x01	; 1
  70:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_OFF(PortB, Pin7);
  74:	67 e0       	ldi	r22, 0x07	; 7
  76:	81 e0       	ldi	r24, 0x01	; 1
  78:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_ON(PortB, Pin3);
  7c:	63 e0       	ldi	r22, 0x03	; 3
  7e:	81 e0       	ldi	r24, 0x01	; 1
  80:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
		LED_ON(PortB, Pin4);
  84:	64 e0       	ldi	r22, 0x04	; 4
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	89 e6       	ldi	r24, 0x69	; 105
  90:	98 e1       	ldi	r25, 0x18	; 24
  92:	21 50       	subi	r18, 0x01	; 1
  94:	80 40       	sbci	r24, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x26>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x30>
  9c:	00 00       	nop
		_delay_ms(500);
		LED_ON(PortB, Pin2);
  9e:	62 e0       	ldi	r22, 0x02	; 2
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
		LED_ON(PortB, Pin5);
  a6:	65 e0       	ldi	r22, 0x05	; 5
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
		LED_OFF(PortB, Pin3);
  ae:	63 e0       	ldi	r22, 0x03	; 3
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_OFF(PortB, Pin4);
  b6:	64 e0       	ldi	r22, 0x04	; 4
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	89 e6       	ldi	r24, 0x69	; 105
  c2:	98 e1       	ldi	r25, 0x18	; 24
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x58>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x62>
  ce:	00 00       	nop
		_delay_ms(500);
		LED_OFF(PortB, Pin2);
  d0:	62 e0       	ldi	r22, 0x02	; 2
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_OFF(PortB, Pin5);
  d8:	65 e0       	ldi	r22, 0x05	; 5
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_ON(PortB, Pin3);
  e0:	63 e0       	ldi	r22, 0x03	; 3
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
		LED_ON(PortB, Pin4);
  e8:	64 e0       	ldi	r22, 0x04	; 4
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
		LED_ON(PortB, Pin1);
  f0:	61 e0       	ldi	r22, 0x01	; 1
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
		LED_ON(PortB, Pin6);
  f8:	66 e0       	ldi	r22, 0x06	; 6
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	89 e6       	ldi	r24, 0x69	; 105
 104:	98 e1       	ldi	r25, 0x18	; 24
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x9a>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0xa4>
 110:	00 00       	nop
		_delay_ms(500);
		LED_OFF(PortB, Pin1);
 112:	61 e0       	ldi	r22, 0x01	; 1
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_OFF(PortB, Pin6);
 11a:	66 e0       	ldi	r22, 0x06	; 6
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_OFF(PortB, Pin3);
 122:	63 e0       	ldi	r22, 0x03	; 3
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_OFF(PortB, Pin4);
 12a:	64 e0       	ldi	r22, 0x04	; 4
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	0e 94 b7 01 	call	0x36e	; 0x36e <LED_OFF>
		LED_ON(PortB, Pin0);
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
		LED_ON(PortB, Pin7);
 13a:	67 e0       	ldi	r22, 0x07	; 7
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	0e 94 85 01 	call	0x30a	; 0x30a <LED_ON>
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	89 e6       	ldi	r24, 0x69	; 105
 146:	98 e1       	ldi	r25, 0x18	; 24
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	80 40       	sbci	r24, 0x00	; 0
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0xdc>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0xe6>
 152:	00 00       	nop
 154:	8b cf       	rjmp	.-234    	; 0x6c <main>

00000156 <DIO_voidSetPinDirection>:
    case PortB: Loc_uint8Result = Get( PinB_Reg,  Pin); break;
    case PortC: Loc_uint8Result = Get( PinC_Reg,  Pin); break;
    case PortD: Loc_uint8Result = Get( PinD_Reg,  Pin); break;
    }
    return Loc_uint8Result;
}
 156:	81 30       	cpi	r24, 0x01	; 1
 158:	01 f1       	breq	.+64     	; 0x19a <DIO_voidSetPinDirection+0x44>
 15a:	30 f0       	brcs	.+12     	; 0x168 <DIO_voidSetPinDirection+0x12>
 15c:	82 30       	cpi	r24, 0x02	; 2
 15e:	b1 f1       	breq	.+108    	; 0x1cc <DIO_voidSetPinDirection+0x76>
 160:	83 30       	cpi	r24, 0x03	; 3
 162:	09 f4       	brne	.+2      	; 0x166 <DIO_voidSetPinDirection+0x10>
 164:	4c c0       	rjmp	.+152    	; 0x1fe <DIO_voidSetPinDirection+0xa8>
 166:	08 95       	ret
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	59 f4       	brne	.+22     	; 0x182 <DIO_voidSetPinDirection+0x2c>
 16c:	2a b3       	in	r18, 0x1a	; 26
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_voidSetPinDirection+0x22>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_voidSetPinDirection+0x1e>
 17c:	82 2b       	or	r24, r18
 17e:	8a bb       	out	0x1a, r24	; 26
 180:	08 95       	ret
 182:	2a b3       	in	r18, 0x1a	; 26
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_voidSetPinDirection+0x38>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	6a 95       	dec	r22
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_voidSetPinDirection+0x34>
 192:	80 95       	com	r24
 194:	82 23       	and	r24, r18
 196:	8a bb       	out	0x1a, r24	; 26
 198:	08 95       	ret
 19a:	41 30       	cpi	r20, 0x01	; 1
 19c:	59 f4       	brne	.+22     	; 0x1b4 <DIO_voidSetPinDirection+0x5e>
 19e:	27 b3       	in	r18, 0x17	; 23
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_voidSetPinDirection+0x54>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_voidSetPinDirection+0x50>
 1ae:	82 2b       	or	r24, r18
 1b0:	87 bb       	out	0x17, r24	; 23
 1b2:	08 95       	ret
 1b4:	27 b3       	in	r18, 0x17	; 23
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_voidSetPinDirection+0x6a>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	6a 95       	dec	r22
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_voidSetPinDirection+0x66>
 1c4:	80 95       	com	r24
 1c6:	82 23       	and	r24, r18
 1c8:	87 bb       	out	0x17, r24	; 23
 1ca:	08 95       	ret
 1cc:	41 30       	cpi	r20, 0x01	; 1
 1ce:	59 f4       	brne	.+22     	; 0x1e6 <DIO_voidSetPinDirection+0x90>
 1d0:	24 b3       	in	r18, 0x14	; 20
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_voidSetPinDirection+0x86>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_voidSetPinDirection+0x82>
 1e0:	82 2b       	or	r24, r18
 1e2:	84 bb       	out	0x14, r24	; 20
 1e4:	08 95       	ret
 1e6:	24 b3       	in	r18, 0x14	; 20
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_voidSetPinDirection+0x9c>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_voidSetPinDirection+0x98>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	84 bb       	out	0x14, r24	; 20
 1fc:	08 95       	ret
 1fe:	41 30       	cpi	r20, 0x01	; 1
 200:	59 f4       	brne	.+22     	; 0x218 <DIO_voidSetPinDirection+0xc2>
 202:	21 b3       	in	r18, 0x11	; 17
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_voidSetPinDirection+0xb8>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	6a 95       	dec	r22
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_voidSetPinDirection+0xb4>
 212:	82 2b       	or	r24, r18
 214:	81 bb       	out	0x11, r24	; 17
 216:	08 95       	ret
 218:	21 b3       	in	r18, 0x11	; 17
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_voidSetPinDirection+0xce>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_voidSetPinDirection+0xca>
 228:	80 95       	com	r24
 22a:	82 23       	and	r24, r18
 22c:	81 bb       	out	0x11, r24	; 17
 22e:	08 95       	ret

00000230 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Port, uint8 Pin, uint8 Value)
{
    switch (Port)
 230:	81 30       	cpi	r24, 0x01	; 1
 232:	01 f1       	breq	.+64     	; 0x274 <DIO_voidSetPinValue+0x44>
 234:	30 f0       	brcs	.+12     	; 0x242 <DIO_voidSetPinValue+0x12>
 236:	82 30       	cpi	r24, 0x02	; 2
 238:	b1 f1       	breq	.+108    	; 0x2a6 <DIO_voidSetPinValue+0x76>
 23a:	83 30       	cpi	r24, 0x03	; 3
 23c:	09 f4       	brne	.+2      	; 0x240 <DIO_voidSetPinValue+0x10>
 23e:	4c c0       	rjmp	.+152    	; 0x2d8 <DIO_voidSetPinValue+0xa8>
 240:	08 95       	ret
    {
    case PortA: if(Value == High) Set( PortA_Reg,  Pin); else Clr( PortA_Reg, Pin); break;
 242:	41 30       	cpi	r20, 0x01	; 1
 244:	59 f4       	brne	.+22     	; 0x25c <DIO_voidSetPinValue+0x2c>
 246:	2b b3       	in	r18, 0x1b	; 27
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 c0       	rjmp	.+4      	; 0x252 <DIO_voidSetPinValue+0x22>
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	6a 95       	dec	r22
 254:	e2 f7       	brpl	.-8      	; 0x24e <DIO_voidSetPinValue+0x1e>
 256:	82 2b       	or	r24, r18
 258:	8b bb       	out	0x1b, r24	; 27
 25a:	08 95       	ret
 25c:	2b b3       	in	r18, 0x1b	; 27
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_voidSetPinValue+0x38>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_voidSetPinValue+0x34>
 26c:	80 95       	com	r24
 26e:	82 23       	and	r24, r18
 270:	8b bb       	out	0x1b, r24	; 27
 272:	08 95       	ret
    case PortB: if(Value == High) Set( PortB_Reg,  Pin); else Clr( PortB_Reg, Pin); break;
 274:	41 30       	cpi	r20, 0x01	; 1
 276:	59 f4       	brne	.+22     	; 0x28e <DIO_voidSetPinValue+0x5e>
 278:	28 b3       	in	r18, 0x18	; 24
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_voidSetPinValue+0x54>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_voidSetPinValue+0x50>
 288:	82 2b       	or	r24, r18
 28a:	88 bb       	out	0x18, r24	; 24
 28c:	08 95       	ret
 28e:	28 b3       	in	r18, 0x18	; 24
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	02 c0       	rjmp	.+4      	; 0x29a <DIO_voidSetPinValue+0x6a>
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	6a 95       	dec	r22
 29c:	e2 f7       	brpl	.-8      	; 0x296 <DIO_voidSetPinValue+0x66>
 29e:	80 95       	com	r24
 2a0:	82 23       	and	r24, r18
 2a2:	88 bb       	out	0x18, r24	; 24
 2a4:	08 95       	ret
    case PortC: if(Value == High) Set( PortC_Reg,  Pin); else Clr( PortC_Reg, Pin); break;
 2a6:	41 30       	cpi	r20, 0x01	; 1
 2a8:	59 f4       	brne	.+22     	; 0x2c0 <DIO_voidSetPinValue+0x90>
 2aa:	25 b3       	in	r18, 0x15	; 21
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_voidSetPinValue+0x86>
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	6a 95       	dec	r22
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_voidSetPinValue+0x82>
 2ba:	82 2b       	or	r24, r18
 2bc:	85 bb       	out	0x15, r24	; 21
 2be:	08 95       	ret
 2c0:	25 b3       	in	r18, 0x15	; 21
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_voidSetPinValue+0x9c>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	6a 95       	dec	r22
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_voidSetPinValue+0x98>
 2d0:	80 95       	com	r24
 2d2:	82 23       	and	r24, r18
 2d4:	85 bb       	out	0x15, r24	; 21
 2d6:	08 95       	ret
    case PortD: if(Value == High) Set( PortD_Reg,  Pin); else Clr( PortD_Reg, Pin); break;
 2d8:	41 30       	cpi	r20, 0x01	; 1
 2da:	59 f4       	brne	.+22     	; 0x2f2 <DIO_voidSetPinValue+0xc2>
 2dc:	22 b3       	in	r18, 0x12	; 18
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <DIO_voidSetPinValue+0xb8>
 2e4:	88 0f       	add	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	6a 95       	dec	r22
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <DIO_voidSetPinValue+0xb4>
 2ec:	82 2b       	or	r24, r18
 2ee:	82 bb       	out	0x12, r24	; 18
 2f0:	08 95       	ret
 2f2:	22 b3       	in	r18, 0x12	; 18
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_voidSetPinValue+0xce>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	6a 95       	dec	r22
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_voidSetPinValue+0xca>
 302:	80 95       	com	r24
 304:	82 23       	and	r24, r18
 306:	82 bb       	out	0x12, r24	; 18
 308:	08 95       	ret

0000030a <LED_ON>:
#include "../Include/LED.h"

void LED_ON( uint8 Port, uint8 Pin)
{
 30a:	cf 93       	push	r28
 30c:	df 93       	push	r29
 30e:	c8 2f       	mov	r28, r24
 310:	d6 2f       	mov	r29, r22
    switch (Port)
 312:	81 30       	cpi	r24, 0x01	; 1
 314:	79 f0       	breq	.+30     	; 0x334 <LED_ON+0x2a>
 316:	28 f0       	brcs	.+10     	; 0x322 <LED_ON+0x18>
 318:	82 30       	cpi	r24, 0x02	; 2
 31a:	a9 f0       	breq	.+42     	; 0x346 <LED_ON+0x3c>
 31c:	83 30       	cpi	r24, 0x03	; 3
 31e:	e1 f0       	breq	.+56     	; 0x358 <LED_ON+0x4e>
 320:	23 c0       	rjmp	.+70     	; 0x368 <LED_ON+0x5e>
    {
        case PortA: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, High); break;
 322:	41 e0       	ldi	r20, 0x01	; 1
 324:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 328:	41 e0       	ldi	r20, 0x01	; 1
 32a:	6d 2f       	mov	r22, r29
 32c:	8c 2f       	mov	r24, r28
 32e:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
 332:	1a c0       	rjmp	.+52     	; 0x368 <LED_ON+0x5e>
        case PortB: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, High); break;
 334:	41 e0       	ldi	r20, 0x01	; 1
 336:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 33a:	41 e0       	ldi	r20, 0x01	; 1
 33c:	6d 2f       	mov	r22, r29
 33e:	8c 2f       	mov	r24, r28
 340:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
 344:	11 c0       	rjmp	.+34     	; 0x368 <LED_ON+0x5e>
        case PortC: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, High); break;
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 34c:	41 e0       	ldi	r20, 0x01	; 1
 34e:	6d 2f       	mov	r22, r29
 350:	8c 2f       	mov	r24, r28
 352:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
 356:	08 c0       	rjmp	.+16     	; 0x368 <LED_ON+0x5e>
        case PortD: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, High); break;
 358:	41 e0       	ldi	r20, 0x01	; 1
 35a:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 35e:	41 e0       	ldi	r20, 0x01	; 1
 360:	6d 2f       	mov	r22, r29
 362:	8c 2f       	mov	r24, r28
 364:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
    }
}
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	08 95       	ret

0000036e <LED_OFF>:

void LED_OFF( uint8 Port, uint8 Pin)
{
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	c8 2f       	mov	r28, r24
 374:	d6 2f       	mov	r29, r22
    switch (Port)
 376:	81 30       	cpi	r24, 0x01	; 1
 378:	79 f0       	breq	.+30     	; 0x398 <LED_OFF+0x2a>
 37a:	28 f0       	brcs	.+10     	; 0x386 <LED_OFF+0x18>
 37c:	82 30       	cpi	r24, 0x02	; 2
 37e:	a9 f0       	breq	.+42     	; 0x3aa <LED_OFF+0x3c>
 380:	83 30       	cpi	r24, 0x03	; 3
 382:	e1 f0       	breq	.+56     	; 0x3bc <LED_OFF+0x4e>
 384:	23 c0       	rjmp	.+70     	; 0x3cc <LED_OFF+0x5e>
    {
        case PortA: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, Low); break;
 386:	41 e0       	ldi	r20, 0x01	; 1
 388:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 38c:	40 e0       	ldi	r20, 0x00	; 0
 38e:	6d 2f       	mov	r22, r29
 390:	8c 2f       	mov	r24, r28
 392:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
 396:	1a c0       	rjmp	.+52     	; 0x3cc <LED_OFF+0x5e>
        case PortB: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, Low); break;
 398:	41 e0       	ldi	r20, 0x01	; 1
 39a:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 39e:	40 e0       	ldi	r20, 0x00	; 0
 3a0:	6d 2f       	mov	r22, r29
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
 3a8:	11 c0       	rjmp	.+34     	; 0x3cc <LED_OFF+0x5e>
        case PortC: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, Low); break;
 3aa:	41 e0       	ldi	r20, 0x01	; 1
 3ac:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 3b0:	40 e0       	ldi	r20, 0x00	; 0
 3b2:	6d 2f       	mov	r22, r29
 3b4:	8c 2f       	mov	r24, r28
 3b6:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
 3ba:	08 c0       	rjmp	.+16     	; 0x3cc <LED_OFF+0x5e>
        case PortD: DIO_voidSetPinDirection(Port, Pin, Output); DIO_voidSetPinValue(Port, Pin, Low); break;
 3bc:	41 e0       	ldi	r20, 0x01	; 1
 3be:	0e 94 ab 00 	call	0x156	; 0x156 <DIO_voidSetPinDirection>
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	6d 2f       	mov	r22, r29
 3c6:	8c 2f       	mov	r24, r28
 3c8:	0e 94 18 01 	call	0x230	; 0x230 <DIO_voidSetPinValue>
    }
 3cc:	df 91       	pop	r29
 3ce:	cf 91       	pop	r28
 3d0:	08 95       	ret

000003d2 <_exit>:
 3d2:	f8 94       	cli

000003d4 <__stop_program>:
 3d4:	ff cf       	rjmp	.-2      	; 0x3d4 <__stop_program>
