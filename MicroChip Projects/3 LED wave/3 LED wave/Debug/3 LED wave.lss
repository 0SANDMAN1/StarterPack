
3 LED wave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000030a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000030a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000033c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008bd  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000677  00000000  00000000  00000c85  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003da  00000000  00000000  000012fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  000016d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b2  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000330  00000000  00000000  00001af2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001e22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 59 01 	jmp	0x2b2	; 0x2b2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:


int main(void)
{
    /* Replace with your application code */
	DIO_voidSetPinDirection(PortD, Pin3, Output); //LED 2
  6c:	41 e0       	ldi	r20, 0x01	; 1
  6e:	63 e0       	ldi	r22, 0x03	; 3
  70:	83 e0       	ldi	r24, 0x03	; 3
  72:	0e 94 7f 00 	call	0xfe	; 0xfe <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PortC, Pin7, Output); //LED 1
  76:	41 e0       	ldi	r20, 0x01	; 1
  78:	67 e0       	ldi	r22, 0x07	; 7
  7a:	82 e0       	ldi	r24, 0x02	; 2
  7c:	0e 94 7f 00 	call	0xfe	; 0xfe <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PortC, Pin2, Output); //LED 0
  80:	41 e0       	ldi	r20, 0x01	; 1
  82:	62 e0       	ldi	r22, 0x02	; 2
  84:	82 e0       	ldi	r24, 0x02	; 2
  86:	0e 94 7f 00 	call	0xfe	; 0xfe <DIO_voidSetPinDirection>
    while (1) 
    {
		DIO_voidSetPinValue(PortC, Pin2, Low);
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	62 e0       	ldi	r22, 0x02	; 2
  8e:	82 e0       	ldi	r24, 0x02	; 2
  90:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PortD, Pin3, High);
  94:	41 e0       	ldi	r20, 0x01	; 1
  96:	63 e0       	ldi	r22, 0x03	; 3
  98:	83 e0       	ldi	r24, 0x03	; 3
  9a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <DIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9e:	2f ef       	ldi	r18, 0xFF	; 255
  a0:	83 ed       	ldi	r24, 0xD3	; 211
  a2:	90 e3       	ldi	r25, 0x30	; 48
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	80 40       	sbci	r24, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x38>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x42>
  ae:	00 00       	nop
		_delay_ms(1000);
		DIO_voidSetPinValue(PortD, Pin3, Low);
  b0:	40 e0       	ldi	r20, 0x00	; 0
  b2:	63 e0       	ldi	r22, 0x03	; 3
  b4:	83 e0       	ldi	r24, 0x03	; 3
  b6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PortC, Pin7, High);
  ba:	41 e0       	ldi	r20, 0x01	; 1
  bc:	67 e0       	ldi	r22, 0x07	; 7
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <DIO_voidSetPinValue>
  c4:	2f ef       	ldi	r18, 0xFF	; 255
  c6:	83 ed       	ldi	r24, 0xD3	; 211
  c8:	90 e3       	ldi	r25, 0x30	; 48
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	80 40       	sbci	r24, 0x00	; 0
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x5e>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x68>
  d4:	00 00       	nop
		_delay_ms(1000);
		DIO_voidSetPinValue(PortC, Pin7, Low);
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	67 e0       	ldi	r22, 0x07	; 7
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PortC, Pin2, High);
  e0:	41 e0       	ldi	r20, 0x01	; 1
  e2:	62 e0       	ldi	r22, 0x02	; 2
  e4:	82 e0       	ldi	r24, 0x02	; 2
  e6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <DIO_voidSetPinValue>
  ea:	2f ef       	ldi	r18, 0xFF	; 255
  ec:	83 ed       	ldi	r24, 0xD3	; 211
  ee:	90 e3       	ldi	r25, 0x30	; 48
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x84>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x8e>
  fa:	00 00       	nop
  fc:	c6 cf       	rjmp	.-116    	; 0x8a <main+0x1e>

000000fe <DIO_voidSetPinDirection>:
    case PortB: Loc_uint8Result = Get( PinB_Reg,  Pin); break;
    case PortC: Loc_uint8Result = Get( PinC_Reg,  Pin); break;
    case PortD: Loc_uint8Result = Get( PinD_Reg,  Pin); break;
    }
    return Loc_uint8Result;
}
  fe:	81 30       	cpi	r24, 0x01	; 1
 100:	01 f1       	breq	.+64     	; 0x142 <DIO_voidSetPinDirection+0x44>
 102:	30 f0       	brcs	.+12     	; 0x110 <DIO_voidSetPinDirection+0x12>
 104:	82 30       	cpi	r24, 0x02	; 2
 106:	b1 f1       	breq	.+108    	; 0x174 <DIO_voidSetPinDirection+0x76>
 108:	83 30       	cpi	r24, 0x03	; 3
 10a:	09 f4       	brne	.+2      	; 0x10e <DIO_voidSetPinDirection+0x10>
 10c:	4c c0       	rjmp	.+152    	; 0x1a6 <DIO_voidSetPinDirection+0xa8>
 10e:	08 95       	ret
 110:	41 30       	cpi	r20, 0x01	; 1
 112:	59 f4       	brne	.+22     	; 0x12a <DIO_voidSetPinDirection+0x2c>
 114:	2a b3       	in	r18, 0x1a	; 26
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_voidSetPinDirection+0x22>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_voidSetPinDirection+0x1e>
 124:	82 2b       	or	r24, r18
 126:	8a bb       	out	0x1a, r24	; 26
 128:	08 95       	ret
 12a:	2a b3       	in	r18, 0x1a	; 26
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_voidSetPinDirection+0x38>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_voidSetPinDirection+0x34>
 13a:	80 95       	com	r24
 13c:	82 23       	and	r24, r18
 13e:	8a bb       	out	0x1a, r24	; 26
 140:	08 95       	ret
 142:	41 30       	cpi	r20, 0x01	; 1
 144:	59 f4       	brne	.+22     	; 0x15c <DIO_voidSetPinDirection+0x5e>
 146:	27 b3       	in	r18, 0x17	; 23
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_voidSetPinDirection+0x54>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_voidSetPinDirection+0x50>
 156:	82 2b       	or	r24, r18
 158:	87 bb       	out	0x17, r24	; 23
 15a:	08 95       	ret
 15c:	27 b3       	in	r18, 0x17	; 23
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_voidSetPinDirection+0x6a>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	6a 95       	dec	r22
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_voidSetPinDirection+0x66>
 16c:	80 95       	com	r24
 16e:	82 23       	and	r24, r18
 170:	87 bb       	out	0x17, r24	; 23
 172:	08 95       	ret
 174:	41 30       	cpi	r20, 0x01	; 1
 176:	59 f4       	brne	.+22     	; 0x18e <DIO_voidSetPinDirection+0x90>
 178:	24 b3       	in	r18, 0x14	; 20
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_voidSetPinDirection+0x86>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_voidSetPinDirection+0x82>
 188:	82 2b       	or	r24, r18
 18a:	84 bb       	out	0x14, r24	; 20
 18c:	08 95       	ret
 18e:	24 b3       	in	r18, 0x14	; 20
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_voidSetPinDirection+0x9c>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_voidSetPinDirection+0x98>
 19e:	80 95       	com	r24
 1a0:	82 23       	and	r24, r18
 1a2:	84 bb       	out	0x14, r24	; 20
 1a4:	08 95       	ret
 1a6:	41 30       	cpi	r20, 0x01	; 1
 1a8:	59 f4       	brne	.+22     	; 0x1c0 <DIO_voidSetPinDirection+0xc2>
 1aa:	21 b3       	in	r18, 0x11	; 17
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_voidSetPinDirection+0xb8>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_voidSetPinDirection+0xb4>
 1ba:	82 2b       	or	r24, r18
 1bc:	81 bb       	out	0x11, r24	; 17
 1be:	08 95       	ret
 1c0:	21 b3       	in	r18, 0x11	; 17
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_voidSetPinDirection+0xce>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_voidSetPinDirection+0xca>
 1d0:	80 95       	com	r24
 1d2:	82 23       	and	r24, r18
 1d4:	81 bb       	out	0x11, r24	; 17
 1d6:	08 95       	ret

000001d8 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Port, uint8 Pin, uint8 Value)
{
    switch (Port)
 1d8:	81 30       	cpi	r24, 0x01	; 1
 1da:	01 f1       	breq	.+64     	; 0x21c <DIO_voidSetPinValue+0x44>
 1dc:	30 f0       	brcs	.+12     	; 0x1ea <DIO_voidSetPinValue+0x12>
 1de:	82 30       	cpi	r24, 0x02	; 2
 1e0:	b1 f1       	breq	.+108    	; 0x24e <DIO_voidSetPinValue+0x76>
 1e2:	83 30       	cpi	r24, 0x03	; 3
 1e4:	09 f4       	brne	.+2      	; 0x1e8 <DIO_voidSetPinValue+0x10>
 1e6:	4c c0       	rjmp	.+152    	; 0x280 <DIO_voidSetPinValue+0xa8>
 1e8:	08 95       	ret
    {
    case PortA: if(Value == High) Set( PortA_Reg,  Pin); else Clr( PortA_Reg, Pin); break;
 1ea:	41 30       	cpi	r20, 0x01	; 1
 1ec:	59 f4       	brne	.+22     	; 0x204 <DIO_voidSetPinValue+0x2c>
 1ee:	2b b3       	in	r18, 0x1b	; 27
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_voidSetPinValue+0x22>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_voidSetPinValue+0x1e>
 1fe:	82 2b       	or	r24, r18
 200:	8b bb       	out	0x1b, r24	; 27
 202:	08 95       	ret
 204:	2b b3       	in	r18, 0x1b	; 27
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_voidSetPinValue+0x38>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_voidSetPinValue+0x34>
 214:	80 95       	com	r24
 216:	82 23       	and	r24, r18
 218:	8b bb       	out	0x1b, r24	; 27
 21a:	08 95       	ret
    case PortB: if(Value == High) Set( PortB_Reg,  Pin); else Clr( PortB_Reg, Pin); break;
 21c:	41 30       	cpi	r20, 0x01	; 1
 21e:	59 f4       	brne	.+22     	; 0x236 <DIO_voidSetPinValue+0x5e>
 220:	28 b3       	in	r18, 0x18	; 24
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_voidSetPinValue+0x54>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_voidSetPinValue+0x50>
 230:	82 2b       	or	r24, r18
 232:	88 bb       	out	0x18, r24	; 24
 234:	08 95       	ret
 236:	28 b3       	in	r18, 0x18	; 24
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_voidSetPinValue+0x6a>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_voidSetPinValue+0x66>
 246:	80 95       	com	r24
 248:	82 23       	and	r24, r18
 24a:	88 bb       	out	0x18, r24	; 24
 24c:	08 95       	ret
    case PortC: if(Value == High) Set( PortC_Reg,  Pin); else Clr( PortC_Reg, Pin); break;
 24e:	41 30       	cpi	r20, 0x01	; 1
 250:	59 f4       	brne	.+22     	; 0x268 <DIO_voidSetPinValue+0x90>
 252:	25 b3       	in	r18, 0x15	; 21
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_voidSetPinValue+0x86>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_voidSetPinValue+0x82>
 262:	82 2b       	or	r24, r18
 264:	85 bb       	out	0x15, r24	; 21
 266:	08 95       	ret
 268:	25 b3       	in	r18, 0x15	; 21
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_voidSetPinValue+0x9c>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_voidSetPinValue+0x98>
 278:	80 95       	com	r24
 27a:	82 23       	and	r24, r18
 27c:	85 bb       	out	0x15, r24	; 21
 27e:	08 95       	ret
    case PortD: if(Value == High) Set( PortD_Reg,  Pin); else Clr( PortD_Reg, Pin); break;
 280:	41 30       	cpi	r20, 0x01	; 1
 282:	59 f4       	brne	.+22     	; 0x29a <DIO_voidSetPinValue+0xc2>
 284:	22 b3       	in	r18, 0x12	; 18
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_voidSetPinValue+0xb8>
 28c:	88 0f       	add	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	6a 95       	dec	r22
 292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_voidSetPinValue+0xb4>
 294:	82 2b       	or	r24, r18
 296:	82 bb       	out	0x12, r24	; 18
 298:	08 95       	ret
 29a:	22 b3       	in	r18, 0x12	; 18
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <DIO_voidSetPinValue+0xce>
 2a2:	88 0f       	add	r24, r24
 2a4:	99 1f       	adc	r25, r25
 2a6:	6a 95       	dec	r22
 2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <DIO_voidSetPinValue+0xca>
 2aa:	80 95       	com	r24
 2ac:	82 23       	and	r24, r18
 2ae:	82 bb       	out	0x12, r24	; 18
 2b0:	08 95       	ret

000002b2 <_exit>:
 2b2:	f8 94       	cli

000002b4 <__stop_program>:
 2b4:	ff cf       	rjmp	.-2      	; 0x2b4 <__stop_program>
