
Sev_Segments.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004b6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000050a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000050a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000053c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e36  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000071b  00000000  00000000  00001426  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004d5  00000000  00000000  00001b41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00002018  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f4  00000000  00000000  000020bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000457  00000000  00000000  000024b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002907  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	81 01       	movw	r16, r2
  56:	96 01       	movw	r18, r12
  58:	ab 01       	movw	r20, r22
  5a:	c0 01       	movw	r24, r0
  5c:	d5 01       	movw	r26, r10
  5e:	ea 01       	movw	r28, r20
  60:	ff 01       	movw	r30, r30
  62:	14 02       	muls	r17, r20
  64:	29 02       	muls	r18, r25
  66:	3e 02       	muls	r19, r30

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf e5       	ldi	r28, 0x5F	; 95
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 1a 01 	call	0x234	; 0x234 <main>
  78:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <DIO_voidSetPinDirection>:
    case PortB: Loc_uint8Result = Get( PinB_Reg,  Pin); break;
    case PortC: Loc_uint8Result = Get( PinC_Reg,  Pin); break;
    case PortD: Loc_uint8Result = Get( PinD_Reg,  Pin); break;
    }
    return Loc_uint8Result;
}
  80:	81 30       	cpi	r24, 0x01	; 1
  82:	01 f1       	breq	.+64     	; 0xc4 <DIO_voidSetPinDirection+0x44>
  84:	30 f0       	brcs	.+12     	; 0x92 <DIO_voidSetPinDirection+0x12>
  86:	82 30       	cpi	r24, 0x02	; 2
  88:	b1 f1       	breq	.+108    	; 0xf6 <DIO_voidSetPinDirection+0x76>
  8a:	83 30       	cpi	r24, 0x03	; 3
  8c:	09 f4       	brne	.+2      	; 0x90 <DIO_voidSetPinDirection+0x10>
  8e:	4c c0       	rjmp	.+152    	; 0x128 <DIO_voidSetPinDirection+0xa8>
  90:	08 95       	ret
  92:	41 30       	cpi	r20, 0x01	; 1
  94:	59 f4       	brne	.+22     	; 0xac <DIO_voidSetPinDirection+0x2c>
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_voidSetPinDirection+0x22>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_voidSetPinDirection+0x1e>
  a6:	82 2b       	or	r24, r18
  a8:	8a bb       	out	0x1a, r24	; 26
  aa:	08 95       	ret
  ac:	2a b3       	in	r18, 0x1a	; 26
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_voidSetPinDirection+0x38>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_voidSetPinDirection+0x34>
  bc:	80 95       	com	r24
  be:	82 23       	and	r24, r18
  c0:	8a bb       	out	0x1a, r24	; 26
  c2:	08 95       	ret
  c4:	41 30       	cpi	r20, 0x01	; 1
  c6:	59 f4       	brne	.+22     	; 0xde <DIO_voidSetPinDirection+0x5e>
  c8:	27 b3       	in	r18, 0x17	; 23
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_voidSetPinDirection+0x54>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_voidSetPinDirection+0x50>
  d8:	82 2b       	or	r24, r18
  da:	87 bb       	out	0x17, r24	; 23
  dc:	08 95       	ret
  de:	27 b3       	in	r18, 0x17	; 23
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_voidSetPinDirection+0x6a>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_voidSetPinDirection+0x66>
  ee:	80 95       	com	r24
  f0:	82 23       	and	r24, r18
  f2:	87 bb       	out	0x17, r24	; 23
  f4:	08 95       	ret
  f6:	41 30       	cpi	r20, 0x01	; 1
  f8:	59 f4       	brne	.+22     	; 0x110 <DIO_voidSetPinDirection+0x90>
  fa:	24 b3       	in	r18, 0x14	; 20
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	02 c0       	rjmp	.+4      	; 0x106 <DIO_voidSetPinDirection+0x86>
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	6a 95       	dec	r22
 108:	e2 f7       	brpl	.-8      	; 0x102 <DIO_voidSetPinDirection+0x82>
 10a:	82 2b       	or	r24, r18
 10c:	84 bb       	out	0x14, r24	; 20
 10e:	08 95       	ret
 110:	24 b3       	in	r18, 0x14	; 20
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_voidSetPinDirection+0x9c>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_voidSetPinDirection+0x98>
 120:	80 95       	com	r24
 122:	82 23       	and	r24, r18
 124:	84 bb       	out	0x14, r24	; 20
 126:	08 95       	ret
 128:	41 30       	cpi	r20, 0x01	; 1
 12a:	59 f4       	brne	.+22     	; 0x142 <DIO_voidSetPinDirection+0xc2>
 12c:	21 b3       	in	r18, 0x11	; 17
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	02 c0       	rjmp	.+4      	; 0x138 <DIO_voidSetPinDirection+0xb8>
 134:	88 0f       	add	r24, r24
 136:	99 1f       	adc	r25, r25
 138:	6a 95       	dec	r22
 13a:	e2 f7       	brpl	.-8      	; 0x134 <DIO_voidSetPinDirection+0xb4>
 13c:	82 2b       	or	r24, r18
 13e:	81 bb       	out	0x11, r24	; 17
 140:	08 95       	ret
 142:	21 b3       	in	r18, 0x11	; 17
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_voidSetPinDirection+0xce>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	6a 95       	dec	r22
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_voidSetPinDirection+0xca>
 152:	80 95       	com	r24
 154:	82 23       	and	r24, r18
 156:	81 bb       	out	0x11, r24	; 17
 158:	08 95       	ret

0000015a <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(uint8 Port, uint8 Pin, uint8 Value)
{
    switch (Port)
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	01 f1       	breq	.+64     	; 0x19e <DIO_voidSetPinValue+0x44>
 15e:	30 f0       	brcs	.+12     	; 0x16c <DIO_voidSetPinValue+0x12>
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	b1 f1       	breq	.+108    	; 0x1d0 <DIO_voidSetPinValue+0x76>
 164:	83 30       	cpi	r24, 0x03	; 3
 166:	09 f4       	brne	.+2      	; 0x16a <DIO_voidSetPinValue+0x10>
 168:	4c c0       	rjmp	.+152    	; 0x202 <DIO_voidSetPinValue+0xa8>
 16a:	08 95       	ret
    {
    case PortA: if(Value == High) Set( PortA_Reg,  Pin); else Clr( PortA_Reg, Pin); break;
 16c:	41 30       	cpi	r20, 0x01	; 1
 16e:	59 f4       	brne	.+22     	; 0x186 <DIO_voidSetPinValue+0x2c>
 170:	2b b3       	in	r18, 0x1b	; 27
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_voidSetPinValue+0x22>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	6a 95       	dec	r22
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_voidSetPinValue+0x1e>
 180:	82 2b       	or	r24, r18
 182:	8b bb       	out	0x1b, r24	; 27
 184:	08 95       	ret
 186:	2b b3       	in	r18, 0x1b	; 27
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_voidSetPinValue+0x38>
 18e:	88 0f       	add	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	6a 95       	dec	r22
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_voidSetPinValue+0x34>
 196:	80 95       	com	r24
 198:	82 23       	and	r24, r18
 19a:	8b bb       	out	0x1b, r24	; 27
 19c:	08 95       	ret
    case PortB: if(Value == High) Set( PortB_Reg,  Pin); else Clr( PortB_Reg, Pin); break;
 19e:	41 30       	cpi	r20, 0x01	; 1
 1a0:	59 f4       	brne	.+22     	; 0x1b8 <DIO_voidSetPinValue+0x5e>
 1a2:	28 b3       	in	r18, 0x18	; 24
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_voidSetPinValue+0x54>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_voidSetPinValue+0x50>
 1b2:	82 2b       	or	r24, r18
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	08 95       	ret
 1b8:	28 b3       	in	r18, 0x18	; 24
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_voidSetPinValue+0x6a>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_voidSetPinValue+0x66>
 1c8:	80 95       	com	r24
 1ca:	82 23       	and	r24, r18
 1cc:	88 bb       	out	0x18, r24	; 24
 1ce:	08 95       	ret
    case PortC: if(Value == High) Set( PortC_Reg,  Pin); else Clr( PortC_Reg, Pin); break;
 1d0:	41 30       	cpi	r20, 0x01	; 1
 1d2:	59 f4       	brne	.+22     	; 0x1ea <DIO_voidSetPinValue+0x90>
 1d4:	25 b3       	in	r18, 0x15	; 21
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_voidSetPinValue+0x86>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_voidSetPinValue+0x82>
 1e4:	82 2b       	or	r24, r18
 1e6:	85 bb       	out	0x15, r24	; 21
 1e8:	08 95       	ret
 1ea:	25 b3       	in	r18, 0x15	; 21
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_voidSetPinValue+0x9c>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_voidSetPinValue+0x98>
 1fa:	80 95       	com	r24
 1fc:	82 23       	and	r24, r18
 1fe:	85 bb       	out	0x15, r24	; 21
 200:	08 95       	ret
    case PortD: if(Value == High) Set( PortD_Reg,  Pin); else Clr( PortD_Reg, Pin); break;
 202:	41 30       	cpi	r20, 0x01	; 1
 204:	59 f4       	brne	.+22     	; 0x21c <DIO_voidSetPinValue+0xc2>
 206:	22 b3       	in	r18, 0x12	; 18
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_voidSetPinValue+0xb8>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_voidSetPinValue+0xb4>
 216:	82 2b       	or	r24, r18
 218:	82 bb       	out	0x12, r24	; 18
 21a:	08 95       	ret
 21c:	22 b3       	in	r18, 0x12	; 18
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	02 c0       	rjmp	.+4      	; 0x228 <DIO_voidSetPinValue+0xce>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	6a 95       	dec	r22
 22a:	e2 f7       	brpl	.-8      	; 0x224 <DIO_voidSetPinValue+0xca>
 22c:	80 95       	com	r24
 22e:	82 23       	and	r24, r18
 230:	82 bb       	out	0x12, r24	; 18
 232:	08 95       	ret

00000234 <main>:
#include <util/delay.h>


int main(void)
{
	Seg_Init(2);
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	0e 94 2f 01 	call	0x25e	; 0x25e <Seg_Init>
    while (1) 
    {
		uint8 i;
		for (i = 0; i < 10; i++)
 23a:	c0 e0       	ldi	r28, 0x00	; 0
 23c:	0d c0       	rjmp	.+26     	; 0x258 <main+0x24>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23e:	2f eb       	ldi	r18, 0xBF	; 191
 240:	87 e2       	ldi	r24, 0x27	; 39
 242:	99 e0       	ldi	r25, 0x09	; 9
 244:	21 50       	subi	r18, 0x01	; 1
 246:	80 40       	sbci	r24, 0x00	; 0
 248:	90 40       	sbci	r25, 0x00	; 0
 24a:	e1 f7       	brne	.-8      	; 0x244 <main+0x10>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x1a>
 24e:	00 00       	nop
		{
			_delay_ms(3000);
			Seg_Display(i);
 250:	8c 2f       	mov	r24, r28
 252:	0e 94 77 01 	call	0x2ee	; 0x2ee <Seg_Display>
{
	Seg_Init(2);
    while (1) 
    {
		uint8 i;
		for (i = 0; i < 10; i++)
 256:	cf 5f       	subi	r28, 0xFF	; 255
 258:	ca 30       	cpi	r28, 0x0A	; 10
 25a:	88 f3       	brcs	.-30     	; 0x23e <main+0xa>
 25c:	ee cf       	rjmp	.-36     	; 0x23a <main+0x6>

0000025e <Seg_Init>:
#include "Segments.h"

void Seg_Init(uint8 segment_ID)
{
 25e:	cf 93       	push	r28
 260:	c8 2f       	mov	r28, r24
    DIO_voidSetPinDirection(Seg_PortA, Seg_Pin4, Output);//A
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	64 e0       	ldi	r22, 0x04	; 4
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(Seg_PortA, Seg_Pin5, Output);//B
 26c:	41 e0       	ldi	r20, 0x01	; 1
 26e:	65 e0       	ldi	r22, 0x05	; 5
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(Seg_PortA, Seg_Pin6, Output);//C
 276:	41 e0       	ldi	r20, 0x01	; 1
 278:	66 e0       	ldi	r22, 0x06	; 6
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(Seg_PortA, Seg_Pin7, Output);//D
 280:	41 e0       	ldi	r20, 0x01	; 1
 282:	67 e0       	ldi	r22, 0x07	; 7
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
	if (segment_ID == 1)//EN1
 28a:	c1 30       	cpi	r28, 0x01	; 1
 28c:	59 f4       	brne	.+22     	; 0x2a4 <Seg_Init+0x46>
	{
		DIO_voidSetPinDirection(PortB, Pin2, Output);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	62 e0       	ldi	r22, 0x02	; 2
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinValue(PortB, Pin2, High);
 298:	41 e0       	ldi	r20, 0x01	; 1
 29a:	62 e0       	ldi	r22, 0x02	; 2
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 2a2:	23 c0       	rjmp	.+70     	; 0x2ea <Seg_Init+0x8c>
	}
	else if (segment_ID == 2)//EN2
 2a4:	c2 30       	cpi	r28, 0x02	; 2
 2a6:	59 f4       	brne	.+22     	; 0x2be <Seg_Init+0x60>
	{
		DIO_voidSetPinDirection(PortB, Pin1, Output);
 2a8:	41 e0       	ldi	r20, 0x01	; 1
 2aa:	61 e0       	ldi	r22, 0x01	; 1
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinValue(PortB, Pin1, High);
 2b2:	41 e0       	ldi	r20, 0x01	; 1
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 2bc:	16 c0       	rjmp	.+44     	; 0x2ea <Seg_Init+0x8c>
	}
	else if (segment_ID == 3)//BOTH
 2be:	c3 30       	cpi	r28, 0x03	; 3
 2c0:	a1 f4       	brne	.+40     	; 0x2ea <Seg_Init+0x8c>
	{
		DIO_voidSetPinDirection(PortB, Pin2, Output);
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	62 e0       	ldi	r22, 0x02	; 2
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinValue(PortB, Pin2, High);
 2cc:	41 e0       	ldi	r20, 0x01	; 1
 2ce:	62 e0       	ldi	r22, 0x02	; 2
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
		DIO_voidSetPinDirection(PortB, Pin1, Output);
 2d6:	41 e0       	ldi	r20, 0x01	; 1
 2d8:	61 e0       	ldi	r22, 0x01	; 1
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinValue(PortB, Pin1, High);
 2e0:	41 e0       	ldi	r20, 0x01	; 1
 2e2:	61 e0       	ldi	r22, 0x01	; 1
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
	}
}
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <Seg_Display>:

void Seg_Display(uint8 number)//, uint8 Seg_Number)
{
	switch (number)
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	8a 30       	cpi	r24, 0x0A	; 10
 2f2:	91 05       	cpc	r25, r1
 2f4:	08 f0       	brcs	.+2      	; 0x2f8 <Seg_Display+0xa>
 2f6:	d6 c0       	rjmp	.+428    	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 2f8:	fc 01       	movw	r30, r24
 2fa:	e6 5d       	subi	r30, 0xD6	; 214
 2fc:	ff 4f       	sbci	r31, 0xFF	; 255
 2fe:	0c 94 53 02 	jmp	0x4a6	; 0x4a6 <__tablejump2__>
    {
//													1											2												4												8
		case 0: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 302:	40 e0       	ldi	r20, 0x00	; 0
 304:	64 e0       	ldi	r22, 0x04	; 4
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 30c:	40 e0       	ldi	r20, 0x00	; 0
 30e:	65 e0       	ldi	r22, 0x05	; 5
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 316:	40 e0       	ldi	r20, 0x00	; 0
 318:	66 e0       	ldi	r22, 0x06	; 6
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 320:	40 e0       	ldi	r20, 0x00	; 0
 322:	67 e0       	ldi	r22, 0x07	; 7
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 32a:	08 95       	ret
        case 1: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 32c:	41 e0       	ldi	r20, 0x01	; 1
 32e:	64 e0       	ldi	r22, 0x04	; 4
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 336:	40 e0       	ldi	r20, 0x00	; 0
 338:	65 e0       	ldi	r22, 0x05	; 5
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 340:	40 e0       	ldi	r20, 0x00	; 0
 342:	66 e0       	ldi	r22, 0x06	; 6
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 34a:	40 e0       	ldi	r20, 0x00	; 0
 34c:	67 e0       	ldi	r22, 0x07	; 7
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 354:	08 95       	ret
        case 2: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 356:	40 e0       	ldi	r20, 0x00	; 0
 358:	64 e0       	ldi	r22, 0x04	; 4
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	65 e0       	ldi	r22, 0x05	; 5
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 36a:	40 e0       	ldi	r20, 0x00	; 0
 36c:	66 e0       	ldi	r22, 0x06	; 6
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 374:	40 e0       	ldi	r20, 0x00	; 0
 376:	67 e0       	ldi	r22, 0x07	; 7
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 37e:	08 95       	ret
        case 3: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 380:	41 e0       	ldi	r20, 0x01	; 1
 382:	64 e0       	ldi	r22, 0x04	; 4
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 38a:	41 e0       	ldi	r20, 0x01	; 1
 38c:	65 e0       	ldi	r22, 0x05	; 5
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 394:	40 e0       	ldi	r20, 0x00	; 0
 396:	66 e0       	ldi	r22, 0x06	; 6
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 39e:	40 e0       	ldi	r20, 0x00	; 0
 3a0:	67 e0       	ldi	r22, 0x07	; 7
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3a8:	08 95       	ret
        case 4: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 3aa:	40 e0       	ldi	r20, 0x00	; 0
 3ac:	64 e0       	ldi	r22, 0x04	; 4
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3b4:	40 e0       	ldi	r20, 0x00	; 0
 3b6:	65 e0       	ldi	r22, 0x05	; 5
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3be:	41 e0       	ldi	r20, 0x01	; 1
 3c0:	66 e0       	ldi	r22, 0x06	; 6
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3c8:	40 e0       	ldi	r20, 0x00	; 0
 3ca:	67 e0       	ldi	r22, 0x07	; 7
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3d2:	08 95       	ret
        case 5: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 3d4:	41 e0       	ldi	r20, 0x01	; 1
 3d6:	64 e0       	ldi	r22, 0x04	; 4
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3de:	40 e0       	ldi	r20, 0x00	; 0
 3e0:	65 e0       	ldi	r22, 0x05	; 5
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3e8:	41 e0       	ldi	r20, 0x01	; 1
 3ea:	66 e0       	ldi	r22, 0x06	; 6
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3f2:	40 e0       	ldi	r20, 0x00	; 0
 3f4:	67 e0       	ldi	r22, 0x07	; 7
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 3fc:	08 95       	ret
        case 6: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 3fe:	40 e0       	ldi	r20, 0x00	; 0
 400:	64 e0       	ldi	r22, 0x04	; 4
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 408:	41 e0       	ldi	r20, 0x01	; 1
 40a:	65 e0       	ldi	r22, 0x05	; 5
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 412:	41 e0       	ldi	r20, 0x01	; 1
 414:	66 e0       	ldi	r22, 0x06	; 6
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 41c:	40 e0       	ldi	r20, 0x00	; 0
 41e:	67 e0       	ldi	r22, 0x07	; 7
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 426:	08 95       	ret
        case 7: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, Low); break;
 428:	41 e0       	ldi	r20, 0x01	; 1
 42a:	64 e0       	ldi	r22, 0x04	; 4
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 432:	41 e0       	ldi	r20, 0x01	; 1
 434:	65 e0       	ldi	r22, 0x05	; 5
 436:	80 e0       	ldi	r24, 0x00	; 0
 438:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 43c:	41 e0       	ldi	r20, 0x01	; 1
 43e:	66 e0       	ldi	r22, 0x06	; 6
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 446:	40 e0       	ldi	r20, 0x00	; 0
 448:	67 e0       	ldi	r22, 0x07	; 7
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 450:	08 95       	ret
        case 8: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, High); break;
 452:	40 e0       	ldi	r20, 0x00	; 0
 454:	64 e0       	ldi	r22, 0x04	; 4
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 45c:	40 e0       	ldi	r20, 0x00	; 0
 45e:	65 e0       	ldi	r22, 0x05	; 5
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 466:	40 e0       	ldi	r20, 0x00	; 0
 468:	66 e0       	ldi	r22, 0x06	; 6
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 470:	41 e0       	ldi	r20, 0x01	; 1
 472:	67 e0       	ldi	r22, 0x07	; 7
 474:	80 e0       	ldi	r24, 0x00	; 0
 476:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 47a:	08 95       	ret
        case 9: DIO_voidSetPinValue(Seg_PortA, Seg_Pin4, High); DIO_voidSetPinValue(Seg_PortA, Seg_Pin5, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin6, Low); DIO_voidSetPinValue(Seg_PortA, Seg_Pin7, High); break;
 47c:	41 e0       	ldi	r20, 0x01	; 1
 47e:	64 e0       	ldi	r22, 0x04	; 4
 480:	80 e0       	ldi	r24, 0x00	; 0
 482:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 486:	40 e0       	ldi	r20, 0x00	; 0
 488:	65 e0       	ldi	r22, 0x05	; 5
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 490:	40 e0       	ldi	r20, 0x00	; 0
 492:	66 e0       	ldi	r22, 0x06	; 6
 494:	80 e0       	ldi	r24, 0x00	; 0
 496:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 49a:	41 e0       	ldi	r20, 0x01	; 1
 49c:	67 e0       	ldi	r22, 0x07	; 7
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	0e 94 ad 00 	call	0x15a	; 0x15a <DIO_voidSetPinValue>
 4a4:	08 95       	ret

000004a6 <__tablejump2__>:
 4a6:	ee 0f       	add	r30, r30
 4a8:	ff 1f       	adc	r31, r31
 4aa:	05 90       	lpm	r0, Z+
 4ac:	f4 91       	lpm	r31, Z
 4ae:	e0 2d       	mov	r30, r0
 4b0:	09 94       	ijmp

000004b2 <_exit>:
 4b2:	f8 94       	cli

000004b4 <__stop_program>:
 4b4:	ff cf       	rjmp	.-2      	; 0x4b4 <__stop_program>
