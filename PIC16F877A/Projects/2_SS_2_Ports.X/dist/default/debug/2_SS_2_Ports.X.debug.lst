

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Dec 03 23:00:48 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  077B                     __pidataBANK0:
   171                           
   172                           ;initializer for main@F880
   173  077B  343F               	retlw	63
   174  077C  3406               	retlw	6
   175  077D  345B               	retlw	91
   176  077E  344F               	retlw	79
   177  077F  3466               	retlw	102
   178  0780  346D               	retlw	109
   179  0781  347D               	retlw	125
   180  0782  3407               	retlw	7
   181  0783  347F               	retlw	127
   182  0784  346F               	retlw	111
   183  0007                     _PORTC	set	7
   184  0006                     _PORTB	set	6
   185  0087                     _TRISC	set	135
   186  0086                     _TRISB	set	134
   187                           
   188                           	psect	cinit
   189  07EE                     start_initialization:	
   190                           ; #config settings
   191                           
   192  07EE                     __initialization:
   193                           
   194                           ; Initialize objects allocated to BANK0
   195  07EE  1383               	bcf	3,7	;select IRP bank0
   196  07EF  3036               	movlw	low (__pdataBANK0+10)
   197  07F0  00FD               	movwf	btemp+-1
   198  07F1  3007               	movlw	high __pidataBANK0
   199  07F2  00FE               	movwf	btemp
   200  07F3  307B               	movlw	low __pidataBANK0
   201  07F4  00FF               	movwf	btemp+1
   202  07F5  302C               	movlw	low __pdataBANK0
   203  07F6  0084               	movwf	4
   204  07F7  120A  118A  2789  120A  118A  	fcall	init_ram0
   205  07FC                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208  07FC                     __end_of__initialization:
   209  07FC  0183               	clrf	3
   210  07FD  120A  118A  2F98   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	dataBANK0
   213  002C                     __pdataBANK0:
   214  002C                     main@F880:
   215  002C                     	ds	10
   216                           
   217                           	psect	inittext
   218  0785                     init_fetch0:	
   219                           ;	Called with low address in FSR and high address in W
   220                           
   221  0785  087E               	movf	btemp,w
   222  0786  008A               	movwf	10
   223  0787  087F               	movf	btemp+1,w
   224  0788  0082               	movwf	2
   225  0789                     init_ram0:	
   226                           ;Called with:
   227                           ;	high address of idata address in btemp 
   228                           ;	low address of idata address in btemp+1 
   229                           ;	low address of data in FSR
   230                           ;	high address + 1 of data in btemp-1
   231                           
   232  0789  120A  118A  2785  120A  118A  	fcall	init_fetch0
   233  078E  0080               	movwf	0
   234  078F  0A84               	incf	4,f
   235  0790  0804               	movf	4,w
   236  0791  067D               	xorwf	btemp+-1,w
   237  0792  1903               	btfsc	3,2
   238  0793  3400               	retlw	0
   239  0794  0AFF               	incf	btemp+1,f
   240  0795  1903               	btfsc	3,2
   241  0796  0AFE               	incf	btemp,f
   242  0797  2F89               	goto	init_ram0
   243                           
   244                           	psect	cstackCOMMON
   245  0071                     __pcstackCOMMON:
   246  0071                     ?_main:
   247  0071                     ??_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0071                     	ds	4
   253                           
   254                           	psect	cstackBANK0
   255  0020                     __pcstackBANK0:
   256  0020                     main@Number:
   257                           
   258                           ; 10 bytes @ 0x0
   259  0020                     	ds	10
   260  002A                     main@i:
   261                           
   262                           ; 2 bytes @ 0xA
   263  002A                     	ds	2
   264                           
   265                           	psect	maintext
   266  0798                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 13 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  Number         10    0[BANK0 ] unsigned char [10]
   277 ;;  i               2   10[BANK0 ] int 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0      12       0       0       0
   289 ;;      Temps:          4       0       0       0       0
   290 ;;      Totals:         4      12       0       0       0
   291 ;;Total ram usage:       16 bytes
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299  0798                     _main:	
   300                           ;psect for function _main
   301                           
   302  0798                     l636:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   305                           
   306                           
   307                           ;main.c: 14:     TRISB = 0x00;
   308  0798  1683               	bsf	3,5	;RP0=1, select bank1
   309  0799  1303               	bcf	3,6	;RP1=0, select bank1
   310  079A  0186               	clrf	6	;volatile
   311                           
   312                           ;main.c: 15:     TRISC = 0x00;
   313  079B  0187               	clrf	7	;volatile
   314                           
   315                           ;main.c: 16:     PORTB = 0x00;
   316  079C  1283               	bcf	3,5	;RP0=0, select bank0
   317  079D  1303               	bcf	3,6	;RP1=0, select bank0
   318  079E  0186               	clrf	6	;volatile
   319                           
   320                           ;main.c: 17:     PORTC = 0x00;
   321  079F  0187               	clrf	7	;volatile
   322  07A0                     l638:
   323                           
   324                           ;main.c: 18:     int i;;main.c: 20:     unsigned char Number[] = {0x3F, 0x06, 0x5B, 0x4F
      +                          , 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
   325  07A0  3020               	movlw	main@Number& (0+255)
   326  07A1  0084               	movwf	4
   327  07A2  302C               	movlw	low main@F880
   328  07A3  00F1               	movwf	??_main
   329  07A4  0804               	movf	4,w
   330  07A5  00F2               	movwf	??_main+1
   331  07A6  300A               	movlw	10
   332  07A7  00F3               	movwf	??_main+2
   333  07A8                     u30:
   334  07A8  0871               	movf	??_main,w
   335  07A9  0084               	movwf	4
   336  07AA  1383               	bcf	3,7	;select IRP bank0
   337  07AB  0800               	movf	0,w
   338  07AC  00F4               	movwf	??_main+3
   339  07AD  0AF1               	incf	??_main,f
   340  07AE  0872               	movf	??_main+1,w
   341  07AF  0084               	movwf	4
   342  07B0  0874               	movf	??_main+3,w
   343  07B1  0080               	movwf	0
   344  07B2  0AF2               	incf	??_main+1,f
   345  07B3  0BF3               	decfsz	??_main+2,f
   346  07B4  2FA8               	goto	u30
   347  07B5                     l640:
   348                           
   349                           ;main.c: 23:         for (i = 0;i < 10;i++)
   350  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   351  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   352  07B7  01AA               	clrf	main@i
   353  07B8  01AB               	clrf	main@i+1
   354  07B9                     l646:
   355                           
   356                           ;main.c: 24:         {;main.c: 25:             PORTB = 0x00;
   357  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   358  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   359  07BB  0186               	clrf	6	;volatile
   360  07BC                     l648:
   361                           
   362                           ;main.c: 26:             PORTB = Number[i];
   363  07BC  082A               	movf	main@i,w
   364  07BD  3E20               	addlw	(low (main@Number| 0))& (0+255)
   365  07BE  0084               	movwf	4
   366  07BF  1383               	bcf	3,7	;select IRP bank0
   367  07C0  0800               	movf	0,w
   368  07C1  0086               	movwf	6	;volatile
   369  07C2                     l650:
   370                           
   371                           ;main.c: 27:             PORTC = 0x00;
   372  07C2  0187               	clrf	7	;volatile
   373                           
   374                           ;main.c: 28:             PORTC = Number[i];
   375  07C3  082A               	movf	main@i,w
   376  07C4  3E20               	addlw	(low (main@Number| 0))& (0+255)
   377  07C5  0084               	movwf	4
   378  07C6  0800               	movf	0,w
   379  07C7  0087               	movwf	7	;volatile
   380  07C8                     l652:
   381                           
   382                           ;main.c: 29:             _delay((unsigned long)((750)*(40000000/4000.0)));
   383  07C8  3027               	movlw	39
   384  07C9  00F3               	movwf	??_main+2
   385  07CA  300D               	movlw	13
   386  07CB  00F2               	movwf	??_main+1
   387  07CC  3026               	movlw	38
   388  07CD  00F1               	movwf	??_main
   389  07CE                     u57:
   390  07CE  0BF1               	decfsz	??_main,f
   391  07CF  2FCE               	goto	u57
   392  07D0  0BF2               	decfsz	??_main+1,f
   393  07D1  2FCE               	goto	u57
   394  07D2  0BF3               	decfsz	??_main+2,f
   395  07D3  2FCE               	goto	u57
   396  07D4  0000               	nop
   397  07D5                     l654:
   398                           
   399                           ;main.c: 30:         }
   400  07D5  3001               	movlw	1
   401  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   402  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   403  07D8  07AA               	addwf	main@i,f
   404  07D9  1803               	skipnc
   405  07DA  0AAB               	incf	main@i+1,f
   406  07DB  3000               	movlw	0
   407  07DC  07AB               	addwf	main@i+1,f
   408  07DD                     l656:
   409  07DD  082B               	movf	main@i+1,w
   410  07DE  3A80               	xorlw	128
   411  07DF  00FF               	movwf	btemp+1
   412  07E0  3080               	movlw	128
   413  07E1  027F               	subwf	btemp+1,w
   414  07E2  1D03               	skipz
   415  07E3  2FE6               	goto	u45
   416  07E4  300A               	movlw	10
   417  07E5  022A               	subwf	main@i,w
   418  07E6                     u45:
   419  07E6  1C03               	skipc
   420  07E7  2FE9               	goto	u41
   421  07E8  2FEA               	goto	u40
   422  07E9                     u41:
   423  07E9  2FB9               	goto	l646
   424  07EA                     u40:
   425  07EA  2FB5               	goto	l640
   426  07EB  120A  118A  2801   	ljmp	start
   427  07EE                     __end_of_main:
   428  007E                     btemp	set	126	;btemp
   429  007E                     wtemp0	set	126
   430                           
   431                           	psect	config
   432                           
   433                           ;Config register CONFIG @ 0x2007
   434                           ;	Oscillator Selection bits
   435                           ;	FOSC = HS, HS oscillator
   436                           ;	Watchdog Timer Enable bit
   437                           ;	WDTE = OFF, WDT disabled
   438                           ;	Power-up Timer Enable bit
   439                           ;	PWRTE = ON, PWRT enabled
   440                           ;	Brown-out Reset Enable bit
   441                           ;	BOREN = OFF, BOR disabled
   442                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   443                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   444                           ;	Data EEPROM Memory Code Protection bit
   445                           ;	CPD = OFF, Data EEPROM code protection off
   446                           ;	Flash Program Memory Write Enable bits
   447                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   448                           ;	In-Circuit Debugger Mode bit
   449                           ;	DEBUG = 0x1, unprogrammed default
   450                           ;	Flash Program Memory Code Protection bit
   451                           ;	CP = OFF, Code protection off
   452  2007                     	org	8199
   453  2007  3F32               	dw	16178

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      4       4
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     137
                                              0 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      4       4       1       30.8%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Dec 03 23:00:48 2023

                      pc 0002                       u30 07A8                       u40 07EA  
                     u41 07E9                       u45 07E6                       u57 07CE  
                     fsr 0004                      l640 07B5                      l650 07C2  
                    l652 07C8                      l636 0798                      l654 07D5  
                    l646 07B9                      l638 07A0                      l656 07DD  
                    l648 07BC                      fsr0 0004                      indf 0000  
                   _main 0798                     btemp 007E                     start 0001  
                  ?_main 0071                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    main@i 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0071  
__end_of__initialization 07FC           __pcstackCOMMON 0071             __pidataBANK0 077B  
             __pmaintext 0798     end_of_initialization 07FC               main@Number 0020  
    start_initialization 07EE               init_fetch0 0785              __pdataBANK0 002C  
              ___latbits 0002            __pcstackBANK0 0020                 main@F880 002C  
               init_ram0 0789  
